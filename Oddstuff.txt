






These cuts are a problem for sure, but why do some vertices which do not meet these criteria live in the slimmed secondary vertex collection?!?
https://github.com/cms-sw/cmssw/blob/CMSSW_9_4_X/RecoVertex/AdaptiveVertexFinder/plugins/InclusiveVertexFinder.h#L216




DeepCSV flips all track 2d and 3d ips + the flight distance 2d and 3d.


ShallowTagInfos for vertex category -> here a cut on flight distance significance is applied, which is not applied on other vertex information.

flight distance sig is bounded from -1 to 800. Does it use the abs value. DeepCSV is not bounded

Track Impact parameters are also bounded from -1 to some value. I am wondering if these bounds will introduce asymmetry when flipping signs.

VertexDdotP should it be flipped?

Absolute value of jetDeltaR is fed to the NN?

In pfDeepCSVNegativeTagInfos:

sip3dSigMax = cms.double(0),
sip3dSigMin = cms.double(-99999.9),

For pfDeepCSVTagInfos:

sip3dSigMax = cms.double(99999.9),
sip3dSigMin = cms.double(-99999.9)

In deepCSV only tracks with negative 3d IpSig are used for negative tagger. Also only used for kinematics.

massVertexEnergyFraction uses all tracks for the energy, but not vertices.

trackSumJetDeltaR,trackSumJetEtRatio

In DeepFlavour we are getting

trackSip3dSigAboveCharm etc. from shallowTag. Here we only will have tracks with negative IP to add up to charm mass.
Whereas we are using all tracks in the charged candidate thingy.

https://github.com/cms-sw/cmssw/blob/09c3fce6626f70fd04223e7dacebf0b485f73f54/RecoBTag/SecondaryVertex/interface/CombinedSVComputer.h#L248-L251

Thresh track returns a dummy with -1.0 on everything if do not get above charm mass:
https://github.com/cms-sw/cmssw/blob/09c3fce6626f70fd04223e7dacebf0b485f73f54/RecoBTag/SecondaryVertex/src/CombinedSVComputer.cc#L90


For the pseudo vertex reconstruction we also have

sip2dSigMax = cms.double(-2.0),
sip2dSigMin = cms.double(-99999.9),



The postive and negative tagger should be symmetric with respect to light jets.

However the distrubutions such as n_vertexTracks, tracksumJetETRatio tracksumJetDeltaR should be different from the full tagger, which uses all tracks regardless of impact parameter


Med deepCSV så er raten af b'er der er i høj tag værdier omkring 3% med track selection for kun negative 3d ip, hvorimod kun 1.5% med 3.0 ip selection. Måske er det bare stat, men fandme mærkeligt.


Prøv at kør på QCD sample as well.

Check that mean padding is compatible with the negative tagger.


MaxDeltaRtoJetAxis is -0.5 for negative but 0.4 for positive tagger.

The flight distance is calculated as unsigned before input in deep flavour. This is a mistake?

For pseudovertices we do not have a stored flight distance. 


DeltaR of negative tagger vertices is huge.


Flip jet direction here: https://github.com/cms-sw/cmssw/blob/a1a699103d53ed00ae87f2a2578dd7e4b6bd0b5b/RecoBTag/SecondaryVertex/plugins/TemplatedSecondaryVertexProducer.cc#L863


Flip jet direction here: https://github.com/cms-sw/cmssw/blob/a1a699103d53ed00ae87f2a2578dd7e4b6bd0b5b/RecoBTag/SecondaryVertex/interface/CombinedSVComputer.h#L146


Correctly done here: https://github.com/cms-sw/cmssw/blob/a1a699103d53ed00ae87f2a2578dd7e4b6bd0b5b/RecoBTag/SecondaryVertex/src/VertexFilter.cc#L136

